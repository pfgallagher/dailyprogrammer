const floodFill = (
	input: string,
	x: number,
	y: number,
	replacementChar: string,
) => {
	const grid = input.split("\n").map(cell => [...cell]);
	const targetChar = grid[y][x];
	fill(grid, y, x, targetChar, replacementChar);
	return grid.map(el => el.join("")).join("\n");
};

const fill = (
	grid: any,
	x: number,
	y: number,
	targetChar: string,
	replacementChar: string,
) => {
	if (
		!grid ||
		!grid[x] ||
		!grid[x][y] ||
		grid[x][y] === replacementChar ||
		grid[x][y] !== targetChar
	) {
		return;
	}
	grid[x][y] = replacementChar;

	fill(grid, x + 1, y, targetChar, replacementChar);
	fill(grid, x - 1, y, targetChar, replacementChar);
	fill(grid, x, y + 1, targetChar, replacementChar);
	fill(grid, x, y - 1, targetChar, replacementChar);
	return;
};

console.log(
	floodFill(
		`.....................................
...#######################...........
...#.....................#...........
...#.....................#...........
...#.....................#...........
...#.....................#...........
...#.....................#...........
...#.....................#######.....
...###.................##......#.....
...#..##.............##........#.....
...#....##.........##..........#.....
...#......##.....##............#.....
...#........#####..............#.....
...#........#..................#.....
...#.......##..................#.....
...#.....##....................#.....
...#...##......................#.....
...#############################.....
.....................................
.....................................
.....................................
.....................................`,
		8,
		12,
		"@",
	),
);
// .....................................
// ...#######################...........
// ...#.....................#...........
// ...#.....................#...........
// ...#.....................#...........
// ...#.....................#...........
// ...#.....................#...........
// ...#.....................#######.....
// ...###.................##......#.....
// ...#@@##.............##........#.....
// ...#@@@@##.........##..........#.....
// ...#@@@@@@##.....##............#.....
// ...#@@@@@@@@#####..............#.....
// ...#@@@@@@@@#..................#.....
// ...#@@@@@@@##..................#.....
// ...#@@@@@##....................#.....
// ...#@@@##......................#.....
// ...#############################.....
// .....................................
// .....................................
// .....................................
// .....................................

console.log(
	floodFill(
		`----------------
-++++++++++++++-
-+------------+-
-++++++++++++-+-
-+------------+-
-+-++++++++++++-
-+------------+-
-++++++++++++-+-
-+------------+-
-+-++++++++++++-
-+------------+-
-++++++++++++++-
-+------------+-
-++++++++++++++-
----------------`,
		2,
		2,
		"@",
	),
);
// ----------------
// -++++++++++++++-
// -+@@@@@@@@@@@@+-
// -++++++++++++@+-
// -+@@@@@@@@@@@@+-
// -+@++++++++++++-
// -+@@@@@@@@@@@@+-
// -++++++++++++@+-
// -+@@@@@@@@@@@@+-
// -+@++++++++++++-
// -+@@@@@@@@@@@@+-
// -++++++++++++++-
// -+------------+-
// -++++++++++++++-
// ----------------

console.log(
	floodFill(
		`aaaaaaaaa
aaadefaaa
abcdafgha
abcdafgha
abcdafgha
abcdafgha
aacdafgaa
aaadafaaa
aaaaaaaaa`,
		8,
		3,
		",",
	),
);
// ,,,,,,,,,
// ,,,def,,,
// ,bcd,fgh,
// ,bcd,fgh,
// ,bcd,fgh,
// ,bcd,fgh,
// ,,cd,fg,,
// ,,,d,f,,,
// ,,,,,,,,,
