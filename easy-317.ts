const collatzTag = (input: string): string => {
	const rules: { [char: string]: string } = {
		a: "bc",
		b: "a",
		c: "aaa",
	};
	const tags = [input];
	let lastTag = input;
	while (lastTag.length > 1) {
		const nextTag = `${lastTag.slice(2)}${rules[lastTag[0]]}`;
		tags.push(nextTag);
		lastTag = nextTag;
	}
	return tags.join("\n");
};

console.log(collatzTag("aaa"), "\n");
// aaa
// abc
// cbc
// caaa
// aaaaa
// aaabc
// abcbc
// cbcbc
// cbcaaa
// caaaaaa
// aaaaaaaa
// aaaaaabc
// aaaabcbc
// aabcbcbc
// bcbcbcbc
// bcbcbca
// bcbcaa
// bcaaa
// aaaa
// aabc
// bcbc
// bca
// aa
// bc
// a

console.log(collatzTag("aaaaaaa"));
// aaaaaaa
// aaaaabc
// aaabcbc
// abcbcbc
// cbcbcbc
// cbcbcaaa
// cbcaaaaaa
// caaaaaaaaa
// aaaaaaaaaaa
// aaaaaaaaabc
// aaaaaaabcbc
// aaaaabcbcbc
// aaabcbcbcbc
// abcbcbcbcbc
// cbcbcbcbcbc
// cbcbcbcbcaaa
// cbcbcbcaaaaaa
// cbcbcaaaaaaaaa
// cbcaaaaaaaaaaaa
// caaaaaaaaaaaaaaa
// aaaaaaaaaaaaaaaaa
// aaaaaaaaaaaaaaabc
// aaaaaaaaaaaaabcbc
// aaaaaaaaaaabcbcbc
// aaaaaaaaabcbcbcbc
// aaaaaaabcbcbcbcbc
// aaaaabcbcbcbcbcbc
// aaabcbcbcbcbcbcbc
// abcbcbcbcbcbcbcbc
// cbcbcbcbcbcbcbcbc
// cbcbcbcbcbcbcbcaaa
// cbcbcbcbcbcbcaaaaaa
// cbcbcbcbcbcaaaaaaaaa
// cbcbcbcbcaaaaaaaaaaaa
// cbcbcbcaaaaaaaaaaaaaaa
// cbcbcaaaaaaaaaaaaaaaaaa
// cbcaaaaaaaaaaaaaaaaaaaaa
// caaaaaaaaaaaaaaaaaaaaaaaa
// aaaaaaaaaaaaaaaaaaaaaaaaaa
// aaaaaaaaaaaaaaaaaaaaaaaabc
// aaaaaaaaaaaaaaaaaaaaaabcbc
// aaaaaaaaaaaaaaaaaaaabcbcbc
// aaaaaaaaaaaaaaaaaabcbcbcbc
// aaaaaaaaaaaaaaaabcbcbcbcbc
// aaaaaaaaaaaaaabcbcbcbcbcbc
// aaaaaaaaaaaabcbcbcbcbcbcbc
// aaaaaaaaaabcbcbcbcbcbcbcbc
// aaaaaaaabcbcbcbcbcbcbcbcbc
// aaaaaabcbcbcbcbcbcbcbcbcbc
// aaaabcbcbcbcbcbcbcbcbcbcbc
// aabcbcbcbcbcbcbcbcbcbcbcbc
// bcbcbcbcbcbcbcbcbcbcbcbcbc
// bcbcbcbcbcbcbcbcbcbcbcbca
// bcbcbcbcbcbcbcbcbcbcbcaa
// bcbcbcbcbcbcbcbcbcbcaaa
// bcbcbcbcbcbcbcbcbcaaaa
// bcbcbcbcbcbcbcbcaaaaa
// bcbcbcbcbcbcbcaaaaaa
// bcbcbcbcbcbcaaaaaaa
// bcbcbcbcbcaaaaaaaa
// bcbcbcbcaaaaaaaaa
// bcbcbcaaaaaaaaaa
// bcbcaaaaaaaaaaa
// bcaaaaaaaaaaaa
// aaaaaaaaaaaaa
// aaaaaaaaaaabc
// aaaaaaaaabcbc
// aaaaaaabcbcbc
// aaaaabcbcbcbc
// aaabcbcbcbcbc
// abcbcbcbcbcbc
// cbcbcbcbcbcbc
// cbcbcbcbcbcaaa
// cbcbcbcbcaaaaaa
// cbcbcbcaaaaaaaaa
// cbcbcaaaaaaaaaaaa
// cbcaaaaaaaaaaaaaaa
// caaaaaaaaaaaaaaaaaa
// aaaaaaaaaaaaaaaaaaaa
// aaaaaaaaaaaaaaaaaabc
// aaaaaaaaaaaaaaaabcbc
// aaaaaaaaaaaaaabcbcbc
// aaaaaaaaaaaabcbcbcbc
// aaaaaaaaaabcbcbcbcbc
// aaaaaaaabcbcbcbcbcbc
// aaaaaabcbcbcbcbcbcbc
// aaaabcbcbcbcbcbcbcbc
// aabcbcbcbcbcbcbcbcbc
// bcbcbcbcbcbcbcbcbcbc
// bcbcbcbcbcbcbcbcbca
// bcbcbcbcbcbcbcbcaa
// bcbcbcbcbcbcbcaaa
// bcbcbcbcbcbcaaaa
// bcbcbcbcbcaaaaa
// bcbcbcbcaaaaaa
// bcbcbcaaaaaaa
// bcbcaaaaaaaa
// bcaaaaaaaaa
// aaaaaaaaaa
// aaaaaaaabc
// aaaaaabcbc
// aaaabcbcbc
// aabcbcbcbc
// bcbcbcbcbc
// bcbcbcbca
// bcbcbcaa
// bcbcaaa
// bcaaaa
// aaaaa
// aaabc
// abcbc
// cbcbc
// cbcaaa
// caaaaaa
// aaaaaaaa
// aaaaaabc
// aaaabcbc
// aabcbcbc
// bcbcbcbc
// bcbcbca
// bcbcaa
// bcaaa
// aaaa
// aabc
// bcbc
// bca
// aa
// bc
// a
